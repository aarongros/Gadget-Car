//Link to lights video: https://www.youtube.com/watch?v=rwz71eXZiJQ
int back_left_1 = 3;
int back_left_2 = 4;
int back_left_3 = 5;
int back_right_1 = 6;
int back_right_2 = 7;
int back_right_3 = 8;
int front_light = 9;
int recieve_left = 10;
int recieve_right = 16;
int recieve_hazards = 14;
int recieve_braking = 15;
int recieve_headlights = 2;
int waitTime = 500;
boolean leftAndBraking = false;
boolean rightAndBraking = false;
boolean braking = false;
boolean headlights = false;
//////////////////////////////////////////////////////////////////////////////////
void setup()  {
  pinMode(back_left_1, OUTPUT);
  pinMode(back_left_2, OUTPUT);
  pinMode(back_left_3, OUTPUT);
  pinMode(back_right_1, OUTPUT);
  pinMode(back_right_2, OUTPUT);
  pinMode(back_right_3, OUTPUT);
  pinMode(front_light, OUTPUT);
  pinMode(recieve_left, INPUT);
  pinMode(recieve_right, INPUT);
  pinMode(recieve_hazards, INPUT);
  pinMode(recieve_braking, INPUT);
  pinMode(recieve_headlights, INPUT);
}
//////////////////////////////////////////////////////////////////////////////////
void loop() {
  //---------------Braking and Turning--------------
  if(digitalRead(recieve_braking) == 1 && !braking)  {
    brakeLights();
    braking = !braking;
  }
  else if(digitalRead(recieve_braking) == 0 && braking) {
    allOff();
    braking = !braking;
  }
  if(digitalRead(recieve_left) == 1)  {
      turnLeftBlincker();
      if(braking) {
       leftAndBraking = true;     
      }
  }
  if(digitalRead(recieve_right) == 1)  {
      turnRightBlincker();
      if(braking) {
       rightAndBraking = true;     
      }
  }
  if(digitalRead(recieve_left) == 0 && leftAndBraking)  {
    digitalWrite(back_left_1, HIGH);
    delay(waitTime);
    digitalWrite(back_left_2, HIGH);
    delay(waitTime);
    digitalWrite(back_left_3, HIGH);
    leftAndBraking = false;     
      
  } 
  if(digitalRead(recieve_right) == 0 && rightAndBraking)  {
    digitalWrite(back_right_1, HIGH);
    delay(waitTime);
    digitalWrite(back_right_2, HIGH);
    delay(waitTime);
    digitalWrite(back_right_3, HIGH);
    rightAndBraking = false;
  }
  //----------------------Hazards---------------------
  if(digitalRead(recieve_hazards) == 1) {
  hazardBlincker();
  }
  //---------------------HeadLights-------------------
  if(digitalRead(recieve_headlights) == 1 && !headlights)  {
    digitalWrite(front_light,HIGH);
    headlights = !headlights;
  }
  else if(digitalRead(recieve_headlights) == 0 && headlights) {
    digitalWrite(front_light,LOW);
    headlights = !headlights;
  }
  //---------------------------------------------------
}
//////////////////////////////////////////////////////////////////////////////////
void turnLeftBlincker()  {
  digitalWrite(back_left_1, HIGH);
  delay(waitTime);
  digitalWrite(back_left_2, HIGH);
  delay(waitTime);
  digitalWrite(back_left_3, HIGH);
  delay(waitTime);
  leftOff();
  delay(waitTime);
}
//////////////////////////////////////////////////////////////////////////////////
void turnRightBlincker()  {
  digitalWrite(back_right_1, HIGH);
  delay(waitTime);
  digitalWrite(back_right_2, HIGH);
  delay(waitTime);
  digitalWrite(back_right_3, HIGH);
  delay(waitTime);
  rightOff();
  delay(waitTime);
}
//////////////////////////////////////////////////////////////////////////////////
void hazardBlincker()  {
  brakeLights();
  allOff();
  delay(waitTime);
}
//////////////////////////////////////////////////////////////////////////////////
void brakeLights() {
  digitalWrite(back_right_1, HIGH);
  digitalWrite(back_left_1, HIGH);
  delay(waitTime);
  digitalWrite(back_right_2, HIGH);
  digitalWrite(back_left_2, HIGH);
  delay(waitTime);
  digitalWrite(back_right_3, HIGH);
  digitalWrite(back_left_3, HIGH);
  delay(waitTime);
}
//////////////////////////////////////////////////////////////////////////////////
void allOff()  {
  digitalWrite(back_right_1, LOW);
  digitalWrite(back_left_1, LOW);
  digitalWrite(back_right_2, LOW);
  digitalWrite(back_left_2, LOW);
  digitalWrite(back_right_3, LOW);
  digitalWrite(back_left_3, LOW);
}
//////////////////////////////////////////////////////////////////////////////////
void leftOff()  {
  digitalWrite(back_left_1, LOW);
  digitalWrite(back_left_2, LOW);
  digitalWrite(back_left_3, LOW);
}
//////////////////////////////////////////////////////////////////////////////////
void rightOff()  {
  digitalWrite(back_right_1, LOW);
  digitalWrite(back_right_2, LOW);
  digitalWrite(back_right_3, LOW);
}
